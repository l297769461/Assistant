<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EkEAADs=
</value>
  </data>
</root>